* TODO Shadowing import stuff
move from import-from to shadowing-import-from for all packages using
define-export-system. This lets us be one step removed from the common
lisp package and limits damage to the overall (lisp) system should
something manage to


* TODO Sandbox level segragation
I should be able to create sandboxes with different sets of imports
and use different ones depending on who is accessing them.


* TODO Rename safe-external package to something else
As it stands the name implies these are external to the safe
package. Most of what is in here are variables and functions directly
related *to* safe. As such the name is a misnomer.

* TODO Define a useful documentation function
Right now documentation is dependent on swank.

* DONE Enable test again for nistilities
  CLOSED: [2009-12-15 Tue 21:00]
  :LOGBOOK:
  - State "DONE"       from "TODO"       [2009-12-15 Tue 21:00]
  :END:
Both nisp and nistilities tests

Use (lift:run-tests :suite 'test-mixin). However I need to generate one
of those that is specific only to nisp related stuff. mixin seems to run
all defined test-suites no matter what project is associated with them.

* WAIT Implement symbol->string
  :LOGBOOK:
  - State "WAIT"       from "TODO"       [2009-12-16 Wed 19:49] \\
    Passing on this for the time being, I really would like to avoid having
    to do more string manipulation then strictly needed with respect to
    packages and symbols.
  :END:
Basic idea is taking any symbol and returning a string with a specified
package (defaulting to current one), and the name of the symbol.

* Safety
Section for general issues and notes with respect to keeping the system
safe for arbitrary code execution.

*** *readtable* in package
    It is probably not a very good idea to put this in the package
    itself and instead associate the readtable with the wrapper object
    safe-package. If the readtable is not stored in the package itself
    or the readtable is somehow made into a constant that cannot be
    changed ever inside the package... we should be safe.

* Developers have straight eval
When a double comchar is given, the bot does a straight eval in :nispbot
with no restrictions other then a timer.

* TODO Remove metatilities as a build dep if possible
Its huge, the dependencies conflict when we do asdf-install:install
... and was generally a bad day overall. I don't use that much out of
that utility set, so its not worth requiring the whole thing.
