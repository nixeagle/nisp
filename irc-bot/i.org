#+TITLE: 'i' experiments


* Definitions :definition:
*** TODO connection
    Might not make any sense once we get into data-sources and
    data-sinks. A connection might be an active instance of a sink or a
    source (or possibly both?). This will not have the same meaning as I
    originally conceived.

*** TODO protocol
    Data encoding

*** DONE provider
    CLOSED: [2010-03-02 Tue 01:23]
    :LOGBOOK:
    - State "DONE"       from "TODO"       [2010-03-02 Tue 01:23]
    :END:
    What organization, company, website, domain are we dealing with. There
    is only one json [[protocol]], but multiple people/services/websites use
    it.

*** DONE medium
    CLOSED: [2010-03-02 Tue 01:24]
    :LOGBOOK:
    - State "DONE"       from "TODO"       [2010-03-02 Tue 01:24]
    :END:
    Combination of both protocol and service. Order here matters! The
    protocol in use always takes priority over the service in use!

***** DONE data-source
      CLOSED: [2010-03-02 Tue 01:23]
      :LOGBOOK:
      - State "DONE"       from "TODO"       [2010-03-02 Tue 01:23]
      :END:
      Superclasses medium and indicates what [[protocol]]/[[provider]] is the data
      coming from.

***** DONE data-sink
      CLOSED: [2010-03-02 Tue 01:24]
      :LOGBOOK:
      - State "DONE"       from "TODO"       [2010-03-02 Tue 01:24]
      :END:
      Superclasses medium and indicates what [[protocol]]/[[provider]] is the data
      going to go to.
*** DONE party
    CLOSED: [2010-03-02 Tue 03:31]
    :LOGBOOK:
    - State "DONE"       from "TODO"       [2010-03-02 Tue 03:31]
    :END:
    Person or thing involved in communication
***** DONE to
      CLOSED: [2010-03-02 Tue 02:44]
      :LOGBOOK:
      - State "DONE"       from "TODO"       [2010-03-02 Tue 02:44]
      :END:
      Person or thing that an [[action]] is targeted at. This may or may not
      have an associated [[identity]]. The default thing an action is targeted
      at is always the "nisp.i" system.

***** DONE from
      CLOSED: [2010-03-02 Tue 02:44]
      :LOGBOOK:
      - State "DONE"       from "TODO"       [2010-03-02 Tue 02:44]
      :END:
      Originator of the [[action]]. This is independent of the protocol. An
      originator may or may not have an associated [[identity]].

*** DONE identity
    CLOSED: [2010-03-02 Tue 02:44]
    :LOGBOOK:
    - State "DONE"       from "TODO"       [2010-03-02 Tue 02:44]
    :END:
    This is the object we want to associate permissions classes with so
    the permission is applicable for the _person_ not just an account
    somewhere.

***** ANSWERED Is this a party?
      CLOSED: [2010-05-22 Sat 17:50]
      :LOGBOOK:
      - State "ANSWERED"   from "QUESTION"   [2010-05-22 Sat 17:50]
      :END:
      Ref: [[party]]
      No it is not, identity is a specific and known person/user account.

*** TODO message-content
    A message itself and what operations are sane to do message contents.

    1) text
    2) binary
    3) other?

       Its actually not important what the contents of a message are as
       long as we define what actions are "valid" and what actions are not
       valid on a particular message.
*** DONE action
    CLOSED: [2010-03-02 Tue 01:38]
    :LOGBOOK:
    - State "DONE"       from "TODO"       [2010-03-02 Tue 01:38]
    :END:
    Actions are things people do within a protocol. We do not usually
    think of doing an action to a service[fn:1]. This is right now easier
    to define by example:

    1) We can PRIVMSG people from irc -> irc
    2) We can MSG people from jabber -> irc with the translation being
       that of the jabber message command being translated to PRIVMSG.
    3) You can MSG from irc -> twitter's protocol where the translation is
       from IRC's PRIVMSG -> a "tweet".

* Thoughts
  (Data source . FBI)
  (From . Remote _person_ or _thing_, eg FBI's data source)

* Tasks
*** DONE Rewrite command routing system to new MOP hackery
    CLOSED: [2010-03-12 Fri 18:44]
    :LOGBOOK:
    - State "DONE"       from "TODO"       [2010-03-12 Fri 18:44]
    :END:
    Move [[file:bot.lisp]] command routing system to new MOP hackery to
    emulate a network using generic functions.


*** QUESTION Actions as keywords?
    Do we need to have a full CLOS object to represent an action or could
    we get by with keywords or some other lighter method?

* Footnotes

[fn:1] Not that actions based on services cannot be defined, its possible
for action types to combine with same [[protocol]] in both the source/sink
ends but differentiate based on which services are in the
combination. There really is nothing you cannot do with this type, but
this type generally has the most meaning within the context of a protocol.
